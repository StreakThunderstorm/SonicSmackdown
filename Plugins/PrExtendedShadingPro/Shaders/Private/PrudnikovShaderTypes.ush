// Copyright 2021 Prudnikov Nikolay. All Rights Reserved.

/*=============================================================================
	PrudnikovShaderTypes.ush: Prudnikov shader types for inject to material
=============================================================================*/

#pragma once

#include "/Engine/Private/Common.ush"

#ifndef PR_SHADER
#define PR_SHADER 0
#endif

#ifndef PR_SHADER_PRO
#define PR_SHADER_PRO 1
#endif

#if PR_SHADER

struct FPrShadingValue
{
	MaterialFloat3 Color;
	MaterialFloat3 LayerModifier;
	MaterialFloat3 ModifiedColor;
	bool bEnabled;
};

struct FPrShadingValues
{
	FPrShadingValue ShadowLayer;
	FPrShadingValue SelfShadowLayer;
	FPrShadingValue DiffuseLayer;
	FPrShadingValue DirectionalLightLayer;
	FPrShadingValue SkylightLayer;
	FPrShadingValue ReflectionLayer;
	FPrShadingValue SpecularLayer;


	FPrShadingValue DynamicLightLayer;
	FPrShadingValue DynamicLightSpecularLayer;
	FPrShadingValue IndirectLayer;

};

FPrShadingValues PrShadingValues_Make()
{
	FPrShadingValues Values;

	Values.ShadowLayer.Color = 0.0;
	Values.ShadowLayer.LayerModifier = 1.0;
	Values.ShadowLayer.bEnabled = false;

	Values.SelfShadowLayer.Color = 0.0;
	Values.SelfShadowLayer.LayerModifier = 1.0;
	Values.SelfShadowLayer.bEnabled = false;

	Values.DiffuseLayer.Color = 0.0;
	Values.DiffuseLayer.LayerModifier = 1.0;
	Values.DiffuseLayer.bEnabled = false;
	
	Values.DirectionalLightLayer.Color = 0.0;
	Values.DirectionalLightLayer.LayerModifier = 1.0;
	Values.DirectionalLightLayer.bEnabled = false;
	
	Values.SkylightLayer.Color = 0.0;
	Values.SkylightLayer.LayerModifier = 1.0;
	Values.SkylightLayer.bEnabled = false;
	
	Values.ReflectionLayer.Color = 0.0;
	Values.ReflectionLayer.LayerModifier = 1.0;
	Values.ReflectionLayer.bEnabled = false;
	
	Values.SpecularLayer.Color = 0.0;
	Values.SpecularLayer.LayerModifier = 1.0;
	Values.SpecularLayer.bEnabled = false;


	Values.DynamicLightLayer.Color = 0.0;
	Values.DynamicLightLayer.LayerModifier = 1.0;
	Values.DynamicLightLayer.bEnabled = false;

	Values.DynamicLightSpecularLayer.Color = 0.0;
	Values.DynamicLightSpecularLayer.LayerModifier = 1.0;
	Values.DynamicLightSpecularLayer.bEnabled = false;
	
	Values.IndirectLayer.Color = 0.0;
	Values.IndirectLayer.LayerModifier = 1.0;
	Values.IndirectLayer.bEnabled = false;


	return Values;
}

void PrShadingValues_UpdateModifiedColor(inout FPrShadingValues Values)
{
	Values.ShadowLayer.ModifiedColor =					Values.ShadowLayer.Color;
	Values.SelfShadowLayer.ModifiedColor =				Values.SelfShadowLayer.Color;
	Values.DiffuseLayer.ModifiedColor =					Values.DiffuseLayer.Color;
	Values.DirectionalLightLayer.ModifiedColor =		Values.DirectionalLightLayer.Color;
	Values.SkylightLayer.ModifiedColor =				Values.SkylightLayer.Color;
	Values.ReflectionLayer.ModifiedColor =				Values.ReflectionLayer.Color;
	Values.SpecularLayer.ModifiedColor =				Values.SpecularLayer.Color;


	Values.DynamicLightLayer.ModifiedColor =			Values.DynamicLightLayer.Color;
	Values.DynamicLightSpecularLayer.ModifiedColor =	Values.DynamicLightSpecularLayer.Color;
	Values.IndirectLayer.ModifiedColor =				Values.IndirectLayer.Color;

}

#endif // PR_SHADER